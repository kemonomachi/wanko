#!/usr/bin/ruby

require 'optparse'

require_relative '../lib/wanko'

options = {}

if ARGV.empty?
  options[:action] = :fetch
else
  opt_parser = OptionParser.new do |opts|
    opts.banner = 'Usage: wanko [action] [options]'

    opts.on '-a', '--add PATTERN',
            'Add a new pattern to look for when fetching.',
            'PATTERN is a case-insensitve regexp.' do |pattern|
      options[:action] = :add
      options[:pattern] = pattern
    end

    opts.on '-d', '--directory DIR',
            'Optional target directory for fetch rules.',
            'If not specified, the default directory is used.' do |directory|
      options[:directory] = directory
    end

    opts.on '--default-dir [DIR]',
            'Set the default directory for fetch rules.',
            'Show the current default if DIR not specified.' do |directory|
      if directory
        options[:action] = :set_default_dir
        options[:directory] = directory
      else
        options[:action] = :show_default_dir
      end
    end

    opts.on '--feed [URL]',
            'Add a new feed to watch for updates.',
            'Show current feeds if URL not specified.' do |url|
      if url
        options[:action] = :add_feed
        options[:url] = url
      else
        options[:action] = :show_feeds
      end
    end

    opts.on '-l', '--list',
            'Show current rules.' do
      options[:action] = :list
    end

    opts.on '-r', '--remove INDEXES', Array,
            'Remove rules. INDEXES is a comma separated list',
            'of integers or ranges of indexes to remove.',
            'Use -l (--list) to show rule indexes.)' do |indexes|
      options[:action] = :remove
      options[:indexes] = indexes.map { |index|
        if index.include? '-'
          Range.new(*index.split('-', 2).map {|n| Integer n}).to_a
        else
          Integer index
        end
      }.flatten
    end

    opts.on '--remove-feed INDEXES', Array,
            'Remove feeds. INDEXES is a comma separated list',
            'of integers or ranges of indexes to remove',
            'Use --feed to show feed numbers.)' do |indexes|
      options[:action] = :remove_feed
      options[:indexes] = indexes.map { |index|
        if index.include? '-'
          Range.new(*index.split('-', 2).map {|n| Integer n}).to_a
        else
          Integer index
        end
      }.flatten
    end

    opts.on_tail '-h', '--help',
                 'Show this message' do
      puts opts
      exit
    end
  end

  begin
    opt_parser.parse!
  rescue OptionParser::InvalidOption
    puts opt_parser
  end
end

case options[:action]
when :add
  if options[:directory]
    Wanko.add options[:pattern], options[:directory]
  else
    Wanko.add options[:pattern]
  end
when :add_feed
  Wanko.add_feed options[:url]
when :fetch
  Wanko.fetch
when :list
  Wanko.list
when :remove
  Wanko.remove options[:indexes]
when :remove_feed
  Wanko.remove_feeds options[:indexes]
when :set_default_dir
  Wanko.default_dir = options[:directory]
when :show_default_dir
  puts Wanko.default_dir
when :show_feeds
  Wanko.list_feeds
end

